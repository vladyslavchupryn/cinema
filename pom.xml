<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>ua.pp.chuprin.web100</groupId>
	<artifactId>cinema</artifactId>
	<name>cinema</name>
	<packaging>war</packaging>
	<version>1.0.0-BUILD-SNAPSHOT</version>
	<properties>
		<!-- на серверах стоит java 6 -->
		<java-version>1.6</java-version>

		<org.springframework-version>3.2.2.RELEASE</org.springframework-version>
		<org.springframework.security-version>3.0.6.RELEASE</org.springframework.security-version>

		<!--<org.springframework-version>3.0.5.RELEASE</org.springframework-version>-->
		<!--<org.springframework.security-version>-->
			<!--3.0.5.RELEASE-->
		<!--</org.springframework.security-version>-->

		<org.springframework.webflow-version>
			2.3.2.RELEASE
		</org.springframework.webflow-version>

		<org.springframework.roo-version>
			1.0.2.RELEASE
		</org.springframework.roo-version>
		<org.aspectj-version>1.7.0</org.aspectj-version>
		<org.slf4j-version>1.5.10</org.slf4j-version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>
			UTF-8
		</project.reporting.outputEncoding>

		<project-directory>${user.dir}/</project-directory>

		<!-- TODO java.lang.ClassNotFoundException: org.apache.tiles.startup.BasicTilesInitializer -->
		<!--<tiles-version>3.0.1</tiles-version>-->
		<tiles-version>2.2.2</tiles-version>
	</properties>

	<profiles>
		<profile>
			<id>cinema-dev</id>
			<properties>
				<compiler-debug>true</compiler-debug>
				<compiler-optimize>false</compiler-optimize>
			</properties>
		</profile>

		<profile>
			<id>cinema-production</id>
			<properties>
				<compiler-debug>false</compiler-debug>
				<compiler-optimize>true</compiler-optimize>
			</properties>
			<!-- секция build в профиле может тодержаться только если профиль
			  описан в pom.xml
			-->
			<!--<build>-->
			<!--</build>-->
		</profile>

	</profiles>


	<dependencies>
		<dependency>
			<groupId>org.apache.tiles</groupId>
			<artifactId>tiles-core</artifactId>
			<version>${tiles-version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tiles</groupId>
			<artifactId>tiles-jsp</artifactId>
			<version>${tiles-version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tiles</groupId>
			<artifactId>tiles-servlet</artifactId>
			<version>${tiles-version}</version>
		</dependency>

		<dependency>
			<groupId>com.jcraft</groupId>
			<artifactId>jsch</artifactId>
			<version>0.1.49</version>
		</dependency>

		<dependency>
			<groupId>javassist</groupId>
			<artifactId>javassist</artifactId>
			<version>3.12.1.GA</version>
		</dependency>

		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${org.springframework-version}</version>
			<exclusions>
				<!-- Exclude Commons Logging in favor of SLF4j -->
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.webflow</groupId>
			<artifactId>spring-webflow</artifactId>
			<version>${org.springframework.webflow-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.webflow</groupId>
			<artifactId>spring-js</artifactId>
			<version>${org.springframework.webflow-version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${org.springframework.security-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${org.springframework.security-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>${org.springframework.security-version}</version>
		</dependency>

		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>1.0.0.GA</version>
			<type>jar</type>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>4.3.0.Final</version>
		</dependency>

		<dependency>
			<groupId>javax.persistence</groupId>
			<artifactId>persistence-api</artifactId>
			<version>1.0</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>3.3.2.GA</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-annotations</artifactId>
			<version>3.3.1.GA</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-commons-annotations</artifactId>
			<version>3.3.0.ga</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>
		<dependency>
			<groupId>postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>9.2-1002.jdbc4</version>
		</dependency>

		<!-- Roo dependencies -->
		<dependency>
			<groupId>org.springframework.roo</groupId>
			<artifactId>org.springframework.roo.annotations</artifactId>
			<version>${org.springframework.roo-version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- AspectJ -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${org.aspectj-version}</version>
		</dependency>

		<!-- Logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${org.slf4j-version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${org.slf4j-version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${org.slf4j-version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.15</version>
			<exclusions>
				<exclusion>
					<groupId>javax.mail</groupId>
					<artifactId>mail</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.jms</groupId>
					<artifactId>jms</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jdmk</groupId>
					<artifactId>jmxtools</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jmx</groupId>
					<artifactId>jmxri</artifactId>
				</exclusion>
			</exclusions>
			<scope>runtime</scope>
		</dependency>

		<!-- @Inject -->
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
		</dependency>

		<!-- Servlet -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>

		<!-- Test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8</version>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<repositories>
		<!-- For testing against latest Spring snapshots -->
		<repository>
			<id>org.springframework.maven.snapshot</id>
			<name>Spring Maven Snapshot Repository</name>
			<url>http://maven.springframework.org/snapshot</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<!-- For developing against latest Spring milestones -->
		<repository>
			<id>org.springframework.maven.milestone</id>
			<name>Spring Maven Milestone Repository</name>
			<url>http://maven.springframework.org/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>

		<!-- Нужен для загрузки последней версии драйвера postgres -->
		<repository>
			<id>jboss-public-repository-group</id>
			<name>JBoss Public Repository Group</name>
			<url>http://repository.jboss.org/nexus/content/groups/public</url>
			<releases>
				<enabled>true</enabled>
			</releases>
		</repository>
	</repositories>

	<build>
		<!--
			тут можно фильтровать только ресурсы попадающие в папку classes
			остальные следует фильтровать в webResources
		-->
		<resources>
			<resource>
				<directory>${project-directory}src/main/resources/</directory>
				<filtering>true</filtering>
				<includes>
					<include>rebel.xml</include>
				</includes>
			</resource>
		</resources>

		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.0</version>
				<configuration>
					<source>${java-version}</source>
					<target>${java-version}</target>
					<encoding>UTF-8</encoding>
					<debug>${compiler-debug}</debug>
					<optimize>${compiler-optimize}</optimize>
					<showDeprecation>true</showDeprecation>
					<showWarnings>true</showWarnings>
				</configuration>
			</plugin>

			<!-- раскомментировать если потребуется вывести список всех объявленных свойств -->
			<!--
						<plugin>
							<artifactId>maven-antrun-plugin</artifactId>
							<version>1.6</version>
							<executions>
								<execution>
									<phase>package</phase>
									<goals>
										<goal>run</goal>
									</goals>
									<configuration>
										<target>
											<property environment="env" />
											<echoproperties />
										</target>
									</configuration>
								</execution>
							</executions>
						</plugin>
			-->

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<!-- требуется чтобы подавить warning о том что webXml не опеределен -->
					<webXml>
						${project-directory}src/main/webapp/WEB-INF/web.xml
					</webXml>
					<webResources>
						<resource>
							<!--
								вообще неплохой вариант генерировать только .properties
								и из них подгружать настройки, так как могут быть конфликты
								с конструкцией ${***} в spring
							-->
							<directory>${project-directory}src/main/webapp/
							</directory>
							<filtering>true</filtering>
						</resource>
					</webResources>
				</configuration>
			</plugin>

			<!-- TODO нужен для запуска тестов - пока не используется -->
			<!--
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-surefire-plugin</artifactId>
							<version>2.13</version>
							<configuration>
								<junitArtifactName>junit:junit</junitArtifactName>
								<excludes>
									<exclude>**/*_Roo_*</exclude>
								</excludes>
							</configuration>
						</plugin>
			-->

			<!-- плагин для деплоймента в tomcat -->
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat6-maven-plugin</artifactId>
				<version>2.1</version>
				<configuration>
					<path>/</path>
					<url>${server-url-manager}</url>
					<server>${server-id}</server>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>2.1</version>
				<configuration>
					<path>/</path>
					<url>${server-url-manager}</url>
					<server>${server-id}</server>
				</configuration>
			</plugin>

			<!-- плагин для обновления БД -->
			<plugin>
				<groupId>com.googlecode.flyway</groupId>
				<artifactId>flyway-maven-plugin</artifactId>
				<version>2.1.1</version>
				<configuration>
					<url>${jdbc-url}</url>
					<user>${jdbc-username}</user>
					<password>${jdbc-password}</password>
					<table>migration_metadata</table>
					<locations>
						<location>filesystem:${project-directory}</location>
					</locations>
					<sqlMigrationPrefix>V</sqlMigrationPrefix>
					<sqlMigrationSuffix>.sql</sqlMigrationSuffix>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<pluginRepositories>
		<!-- пример описания репозитория плагинов -->
		<!--<pluginRepository>-->
		<!--<id>c5-public-repository</id>-->
		<!--<url>http://mvn.carbonfive.com/public</url>-->
		<!--</pluginRepository>-->
	</pluginRepositories>
</project>
